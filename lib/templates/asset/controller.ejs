<% if (canRender(["service"])) { -%>
const <%= $name.toPascalCase() %>Serv = require("./../services/<%= $name.toKebabCase() %>.service");
<% } -%> 
const response = require("./../utils/response");


class <%= $name.toPascalCase() %>Contoller {
<%# :::::::::::::::::::: CREATE :::::::::::::::::::: -%>
<% if (canRender(["crud", "create"])) { -%>

   async create(req, res) {
<% if (canRender(["service"])) { -%>
      const result = await <%= $name.toPascalCase() %>Serv.create(req.body);
      res.status(201).send(response("<%= $name.toSentenceCase() %> created", result));
<% } -%>
<% if (!canRender(["service"])) { -%>
      // create
      res.status(201).send(response("<%= $name.toSentenceCase() %> created", null));
<% } -%>
  } 
<% } -%>
<%# :::::::::::::::::::: GET ALL :::::::::::::::::::: -%>
<% if (canRender(["crud", "read"])) { -%>

  async getAll(req, res) {
<% if (canRender(["service"])) { -%>
   const result = await <%= $name.toPascalCase() %>Serv.getAll();
   res.status(200).send(response("All <%= $name.toSentenceCase() %>", result));
<% } -%>
<% if (!canRender(["service"])) { -%>
   // get all
   res.status(200).send(response("All <%= $name.toSentenceCase() %>", null));
<% } -%>
  }
<%# :::::::::::::::::::: GET ONE :::::::::::::::::::: %>
  async getOne(req, res) {
<% if (canRender(["service"])) { -%>
   const result = await <%= $name.toPascalCase() %>Serv.getOne(req.params.<%= $name.toCamelCase() %>Id);
   res.status(200).send(response("<%= $name.toSentenceCase() %> data", result));
<% } -%>
<% if (!canRender(["service"])) { -%>
   // get one
   res.status(200).send(response("<%= $name.toSentenceCase() %> data", null));
<% } -%>
  }
<% } -%>
<%# :::::::::::::::::::: UPDATE :::::::::::::::::::: -%>
<% if (canRender(["crud", "update"])) { -%>

  async update(req, res) {
<% if (canRender(["service"])) { -%>
   const result = await <%= $name.toPascalCase() %>Serv.update(req.params.<%= $name.toCamelCase() %>Id, req.body);
   res.status(200).send(response("<%= $name.toSentenceCase() %> updated", result));
<% } -%>
<% if (!canRender(["service"])) { -%>
   // update
   res.status(200).send(response("<%= $name.toSentenceCase() %> updated", null));
<% } -%>
  }
<% } -%>
<%# :::::::::::::::::::: DELETE :::::::::::::::::::: -%>
<% if (canRender(["crud", "delete"])) { -%>
  
  async delete(req, res) {
<% if (canRender(["service"])) { -%>
   const result = await <%= $name.toPascalCase() %>Serv.delete(req.params.<%= $name.toCamelCase() %>Id);
   res.status(200).send(response("<%= $name.toSentenceCase() %> deleted", result));
<% } -%>
<% if (!canRender(["service"])) { -%>
   // delete
   res.status(200).send(response("<%= $name.toSentenceCase() %> deleted", null));
<% } -%>
  }
<% } -%>

}


module.exports = new <%= $name.toPascalCase() %>Contoller();
