const nodemailer = require("nodemailer");
const CustomError = require("./../utils/custom-error");
const { mailer, APP_NAME } = require("./../config");


// Custom email response object
const emailResponse = (status, message) => {
  return {
    status: status,
    message: message
  }
}

class MailService {
  constructor(user) {
    this.user = user;
  }

  async send(subject, content, to, from) {
    from = from || `${APP_NAME} <no-reply${mailer.DOMAIN}>`
    content = content || " "

    if (!to || to.length < 1) throw new CustomError("Recipient is required");
    if (!subject) throw new CustomError("Subject is required");

    // Define nodemailer transporter
    const transporter = nodemailer.createTransport({
      host: mailer.HOST,
      port: mailer.PORT,
      secure: mailer.SECURE,
      auth: {
        user: mailer.USER,
        pass: mailer.PASSWORD
      }
    });

    const sendMail = await transporter.sendMail({
      from,
      to: Array.isArray(to) ? to.join() : to,
      subject,
      text: content
    });

    return await sendMail
  }

  async sendEmailVerificationMail(link) {
    const subject = "Email Verification";
    const content = `Hey ${this.user.name}, /n Please click on the link to verify your email ${link}`
    const email = this.user.email

    await this.send(subject, content, email)
  }

  async sendPasswordResetMail(link) {
    const subject = "Reset password";
    const content = `Hey ${this.user.name}, /n Please click on the link to reset your password ${link}`
    const email = this.user.email

    await this.send(subject, content, email)
  }
}

module.exports = MailService